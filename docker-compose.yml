version: "3.8"
services:
  mysql:
    image: mysql:8
    command: mysqld --default-authentication-plugin=mysql_native_password --sql_mode=""
    restart: on-failure
    volumes:
      - ./docker/dev/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - db:/var/lib/mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root

  phpmyadmin:
    image: phpmyadmin
    container_name: pma
    restart: always
    depends_on:
      - mysql
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql

  php:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    environment:
      - PHP_MEMORY_LIMIT=-1
    volumes:
      - ./:/app

  nginx:
    image: nginx:1.19.0-alpine
    restart: on-failure
    volumes:
      - './public:/usr/src/app'
      - './docker/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '8000:80'
    depends_on:
      - php

  redis:
    image: redis
    restart: on-failure
    ports:
      - '6379:6379'
    volumes:
      - db:/redis/

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
